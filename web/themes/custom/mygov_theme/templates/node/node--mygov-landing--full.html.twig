{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    node.bundle|clean_class,
    node.isPromoted() ? 'is-promoted',
    node.isSticky() ? 'is-sticky',
    not node.isPublished() ? 'is-unpublished',
    view_mode ? view_mode|clean_class,
    'clearfix',
  ]
%}
<article{{ attributes.addClass(classes) }}>

  {{ title_prefix }}
  {% if label and not page %}
    <h2{{ title_attributes }}>
      <a href="{{ url }}" rel="bookmark">{{ label }}</a>
    </h2>
  {% endif %}
  {{ title_suffix }}

  {% if display_submitted %}
    <footer>
      {{ author_picture }}
      <div{{ author_attributes.addClass('author') }}>
        {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
        {{ metadata }}
      </div>
    </footer>
  {% endif %}

  <section class="white-section" id="cta">
  <div class="cta-row">

    <div{{ content_attributes.addClass('content') }}>
      <div class = "call-to-action">
          <div class = "cta-text">
              <div class = "headline">
                  <h3{{ content.field_headline }}

                  </h3>
              </div>
              


                  <div class = "cta-summary">
                  {{ content.field_calltoaction }} 
                  <div class = 'cta-buttons'>
                    <a href="http://mygovcms.com/user/register" class="btn btn-dark register-btn" role="button" aria-pressed="true">Register</a>
                    <a href="http://mygovcms.com/user/login" class="btn btn-dark login-btn " role="button" aria-pressed="true">Login</a>
                  </div>
                
              </div>
          </div>

          <div class = "call-to-action-img">
            <div class = "ctaimg1">
              {{ content.field_ctaimage }}
            </div>

            <div class = "ctaimg2">
              {{ content.field_ctaimg2 }} 
            </div>

          </div>

              
      </div>
    </div>
  </section>


 <section class="white-section" id="mygov-info">

    <div class = "mygov-info">    
        <div class = "info-column1">  
          <div class = "info1-img">
              {{ content.field_companyimage }} 
          </div>

          <div class = "info1">
            {{ content.field_companyinfo }}
          </div>
        </div>

        <div class = "info-column2">  
          <div class = "info-img2">

          {{ content.field_companyimage2 }}

          </div>

          <div class = "info2">
              {{ content.field_companyinfo2 }} 
          </div>
        </div>
            
    </div>
  </section>

  <section class="white-section" id="features">
    <div class="features">

      <div class="features-row">
        <div class="feature-box col-lg-4">
          <i class="icon fas fa-laptop-house fa-4x"></i>
          <h3 class="feature-title">Easy to use.</h3>
          <p>No coding?  No problem, our simple interface allows anyone to create a website!</p>
        </div>

        <div class="feature-box col-lg-4">
          <i class="icon fas fa-laptop-code fa-4x"></i>
          <h3 class="feature-title">Anytime, anywhere.</h3>
          <p>Update your website anytime, anywhere.</p>
        </div>

        <div class="feature-box col-lg-4">
          <i class="icon fas fa-mobile fa-4x"></i>
          <h3 class="feature-title">Always be connected.</h3>
          <p>Responsive pages allow your community to be connected at all times.</p>
        </div>
      </div>
    </div>
  </section>

  </div>

</article>
